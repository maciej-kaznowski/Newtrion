plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

version "0.1"
group "com.innercirclesoftware"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"

    kapt 'io.micronaut.data:micronaut-data-processor:1.0.0'

    //swagger
    kapt "io.micronaut.configuration:micronaut-openapi:1.4.2"
    implementation "io.swagger.core.v3:swagger-annotations"

    //data source
//    implementation "io.micronaut.configuration:micronaut-hibernate-jpa"
    runtimeOnly "io.micronaut.configuration:micronaut-jdbc-hikari"
    //drivers
//    runtime "com.h2database:h2"
    runtimeOnly 'org.postgresql:postgresql:42.2.4'


//    implementation 'io.micronaut.configuration:micronaut-postgres-reactive'

    implementation 'io.micronaut.data:micronaut-data-hibernate-jpa'

//    compile 'io.micronaut.data:micronaut-data-hibernate-jpa:1.0.0'


//    implementation 'io.micronaut.data:micronaut-data-jdbc'
    //    runtimeOnly "io.micronaut.configuration:micronaut-jdbc-tomcat"

    //rx
    implementation("io.reactivex.rxjava2:rxkotlin:2.4.0")


    //testing
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.1.3"
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.6.1"

    testImplementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    testImplementation 'com.github.maciej-kaznowski:randoms:master-SNAPSHOT'
    testRuntime "com.h2database:h2"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.innercirclesoftware.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
